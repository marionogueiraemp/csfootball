import { NotNull } from './isNotNull';
import { IsDefined } from './isNotUndefined';
declare const assess: <T>(t: T) => t is NotNull<IsDefined<T>>;
declare const assure: <T>(input: T) => NotNull<IsDefined<T>>;
interface IsPresentWithAssure {
    <T>(t: T): t is NotNull<IsDefined<T>>;
    assess: typeof assess;
    assure: typeof assure;
}
/**
 * checks whether the value is defined and is not null
 *
 * refs
 * - https://github.com/microsoft/TypeScript/issues/16069#issuecomment-566222173
 */
declare const isPresentWithAssure: IsPresentWithAssure;
export { isPresentWithAssure as isPresent };
