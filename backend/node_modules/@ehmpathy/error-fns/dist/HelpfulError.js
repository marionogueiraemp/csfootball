"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HelpfulError = void 0;
const type_fns_1 = require("type-fns");
const env_1 = require("./utils/env");
/**
 * HelpfulError errors are used to add information that helps the future observer of the error understand whats going on
 */
class HelpfulError extends Error {
    constructor(message, metadata) {
        const metadataWithoutCause = metadata
            ? (0, type_fns_1.omit)(metadata, ['cause'])
            : metadata;
        const fullMessage = [
            message,
            metadataWithoutCause && Object.keys(metadataWithoutCause).length
                ? (0, env_1.getEnvOptions)().expand
                    ? JSON.stringify(metadataWithoutCause, null, 2)
                    : JSON.stringify(metadataWithoutCause)
                : null,
        ]
            .filter(type_fns_1.isPresent)
            .join('\n\n');
        super(fullMessage, (metadata === null || metadata === void 0 ? void 0 : metadata.cause) ? { cause: metadata.cause } : undefined);
    }
    /**
     * a utility to throw an error of this class, for convenience
     *
     * e.g.,
     * ```ts
     * const phone = customer.phone ?? HelpfulError.throw('expected a phone');
     * ```
     */
    static throw(// https://stackoverflow.com/a/51749145/3068233
    message, metadata) {
        // eslint-disable-next-line @typescript-eslint/no-throw-literal
        throw new this(message, metadata);
    }
    /**
     * an override to ensure that errors are serialized to json expressively
     *
     * ref
     * - https://stackoverflow.com/a/18391400/3068233
     * - https://github.com/nodejs/node/issues/29090
     */
    toJSON(// https://stackoverflow.com/a/51749145/3068233
    message, metadata) {
        const obj = {};
        Object.getOwnPropertyNames(this)
            .sort()
            .forEach((key) => {
            obj[key] = this[key];
        }, this);
        return obj;
    }
}
exports.HelpfulError = HelpfulError;
//# sourceMappingURL=HelpfulError.js.map