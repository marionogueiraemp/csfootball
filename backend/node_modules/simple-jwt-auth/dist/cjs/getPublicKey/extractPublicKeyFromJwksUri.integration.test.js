"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const test_fns_1 = require("test-fns");
const extractPublicKeyFromJwksUri_1 = require("./extractPublicKeyFromJwksUri");
describe('extractPublicKeyFromJwksUri', () => {
    // todo: update test to handle fact that google rotates kids (key-ids)
    test_fns_1.given.skip('a real google jwks uri', () => {
        (0, test_fns_1.when)('called with a real kid in the jwks defined in the file', () => {
            (0, test_fns_1.then)('find the correct public key', () => __awaiter(void 0, void 0, void 0, function* () {
                const publicKey = yield (0, extractPublicKeyFromJwksUri_1.extractPublicKeyFromJwksUri)({
                    jwksUri: 'https://www.googleapis.com/oauth2/v3/certs',
                    headerClaims: {
                        kid: '838c06c62046c2d948affe137dd5310129f4d5d1',
                    },
                });
                expect(publicKey).toContain('-----BEGIN PUBLIC KEY-----');
            }));
        });
    });
    (0, test_fns_1.given)('a real whodis jwks uri', () => {
        (0, test_fns_1.when)('called with a real kid in the jwks defined in the file', () => {
            (0, test_fns_1.then)('find the correct public key', () => __awaiter(void 0, void 0, void 0, function* () {
                const publicKey = yield (0, extractPublicKeyFromJwksUri_1.extractPublicKeyFromJwksUri)({
                    jwksUri: 'https://oauth.whodis.io/32b8b554-12f5-4f9b-9f16-b13e0b532019/.well-known/jwks.json',
                    headerClaims: {
                        kid: '4d.32b8b554-12f5-4f9b-9f16-b13e0b532019',
                    },
                });
                expect(publicKey).toContain('-----BEGIN PUBLIC KEY-----');
            }));
        });
    });
});
//# sourceMappingURL=extractPublicKeyFromJwksUri.integration.test.js.map