import { SimpleJwtAuthError } from './SimpleJwtAuthError';
import { base64UrlDecode } from './base64Url/base64UrlDecode';
import { isJSONWebToken } from './isJSONWebToken';
/**
 * Decode the body of the token and return the claims, without checking authenticity of claims.
 */
export const getUnauthedClaims = ({ token, }) => {
    if (!isJSONWebToken(token))
        throw new SimpleJwtAuthError('token does not match shape of a JWT');
    const parts = token.split('.');
    const payload = JSON.parse(base64UrlDecode(parts[1]));
    return payload;
};
//# sourceMappingURL=getUnauthedClaims.js.map